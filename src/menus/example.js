/**
 * @file Example Menu
 * @description Um exemplo de como criar um menu de sele√ß√£o
 */

import { StringSelectMenuBuilder, StringSelectMenuOptionBuilder, ActionRowBuilder } from 'discord.js';

export default {
    id: 'example_menu',
    data: new StringSelectMenuBuilder()
        .setCustomId('example_menu')
        .setPlaceholder('Selecione uma op√ß√£o')
        .addOptions(
            new StringSelectMenuOptionBuilder()
                .setLabel('Op√ß√£o 1')
                .setDescription('Descri√ß√£o da op√ß√£o 1')
                .setValue('option1'),
            new StringSelectMenuOptionBuilder()
                .setLabel('Op√ß√£o 2')
                .setDescription('Descri√ß√£o da op√ß√£o 2')
                .setValue('option2')
        ),

    /**
     * Executa a a√ß√£o do menu quando uma op√ß√£o √© selecionada
     * @param {import('discord.js').StringSelectMenuInteraction} interaction A intera√ß√£o do menu
     */
    async execute(interaction) {
        try {
            await interaction.deferReply({ ephemeral: true });
            
            const selectedValue = interaction.values[0];
            
            switch (selectedValue) {
                case 'option1':
                    await interaction.editReply('Voc√™ selecionou a Op√ß√£o 1! üéâ');
                    break;
                    
                case 'option2':
                    await interaction.editReply('Voc√™ selecionou a Op√ß√£o 2! üåü');
                    break;
                    
                default:
                    await interaction.editReply('Op√ß√£o n√£o reconhecida üòï');
            }
            
        } catch (error) {
            console.error('‚ùå Erro no menu de exemplo:', error);
            
            // Verifica se √© um erro de permiss√£o
            if (error.code === 50013) {
                await interaction.followUp({ 
                    content: '‚ùå N√£o tenho permiss√£o para executar esta a√ß√£o.',
                    ephemeral: true 
                });
                return;
            }
            
            // Tenta enviar mensagem de erro apropriada
            try {
                const response = interaction.replied || interaction.deferred ?
                    await interaction.editReply('‚ùå Ocorreu um erro ao processar sua sele√ß√£o.') :
                    await interaction.reply({ 
                        content: '‚ùå Ocorreu um erro ao processar sua sele√ß√£o.',
                        ephemeral: true 
                    });
            } catch (followUpError) {
                console.error('‚ùå Erro ao enviar mensagem de erro:', followUpError);
            }
        }
    }
};
